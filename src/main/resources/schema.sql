DROP TABLE IF EXISTS STUDENT;

CREATE TABLE STUDENT (
  id INT AUTO_INCREMENT  PRIMARY KEY,
  name VARCHAR(250) NOT NULL,
  email VARCHAR(250) NOT NULL,
  dob DATE NOT NULL
);

DROP TABLE IF EXISTS USERS cascade;

CREATE TABLE USERS (
  id INT AUTO_INCREMENT  PRIMARY KEY,
  fname VARCHAR(250) NOT NULL,
  lname VARCHAR(250) NOT NULL,
  email VARCHAR(250) NOT NULL,
  password VARCHAR(250) NOT NULL,
  locked BOOLEAN,
  enabled BOOLEAN
);

DROP TABLE IF EXISTS EVENT;

CREATE TABLE EVENT (
  id INT AUTO_INCREMENT  PRIMARY KEY,
  name VARCHAR(250) NOT NULL,
  startDate DateTime NOT NULL,
  endDate DateTime NOT NULL
);

DROP TABLE IF EXISTS CHATROOM cascade;

CREATE TABLE CHATROOM (
  id INT AUTO_INCREMENT  PRIMARY KEY,
  name VARCHAR(250) NOT NULL,
  owner_id INT
);

ALTER TABLE CHATROOM ADD FOREIGN KEY (owner_id) REFERENCES USERS(id);

DROP TABLE IF EXISTS USER_CHATROOM;

CREATE TABLE USER_CHATROOM (
  id INT AUTO_INCREMENT  PRIMARY KEY,
  user_id INT,
  chatroom_id INT
);

ALTER TABLE USER_CHATROOM ADD FOREIGN KEY (user_id) REFERENCES USERS(id);

ALTER TABLE USER_CHATROOM ADD FOREIGN KEY (chatroom_id) REFERENCES CHATROOM(id);

DROP TABLE IF EXISTS CHAT;

CREATE TABLE CHAT (
  id INT AUTO_INCREMENT  PRIMARY KEY,
  sent_at DateTime NOT NULL,
  message TEXT,
  chatroom_id INT,
  sender_id INT
);

ALTER TABLE CHAT ADD FOREIGN KEY (chatroom_id) REFERENCES CHATROOM(id);

ALTER TABLE CHAT ADD FOREIGN KEY (sender_id) REFERENCES USERS(id);
